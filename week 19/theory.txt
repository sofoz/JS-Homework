1. Чем отличается класс от объекта? Приведите примеры и того, и другого, отличные от указанных в уроке.

Класс - структура.
Объект - конкретная переменная с заполненными полями на основе этой структуры.

Класс "кандидат на вакансию": ФИО, дата рождения, город проживания, опыт работы, образование, ключевые навыки
Объект "София как кандидат на вакансию": Елисеева С.С., 23.09.1995, Москва, 7 лет, высшее, ответственность 

2. Приведите примеры объектно-ориентированного подхода в реальной жизни. 

    Характеристики ноутбука (процессор, размер экрана, оперативная память, цвет)
    Коллекция вещей (название, качество, цвет, размер, цена)
    Сталинские высотки(адрес, год строительства, высота)
   
Приведите примеры объектно-ориентированного подхода в программировании. 
    
    Профиль пользователя(ФИО, логин, фото, избранное, личные данные)
    Добавление заметок (название, текст заметки, цвет карточки)
    Фото в галерее (название, описание, автор )
    
3. Что такое конструктор? Самостоятельно изучите и напишите, какие бывают виды конструкторов.
Конструктор - это специальная функция, задача которой заполнить пустой объект свойствами и методами. 
Самым простым способом создания объекта является использование конструктора Object().
Ключевое слово this - это то, что отличает конструктор от обычной функции. Конструктор использует в своем теле ключевое слово this, чтобы в объект добавить какие-то свойства. Ключевое слово this в момент запуска функции всегда ссылается на пустой объект, который был создан с помощью оператора new.
Основные конструкторы -- Object(), Array(), Function(), Date(), String().

4. 
код выведет:
bike()// ninja
obj1.bike()// pomidor
obj2.bike()// site

В первом случае функция вызывается в глобальном контексте выполнения (window) и находит объявленную переменную name = ninja
В остальных случаях функция обращается к объекту this, получая свойство name текущего контекста

5. Чем статические свойства и методы отличаются от нестатических? В каких ситуациях они применяются?
Статические методы и свойства класса:
- не привязаны к конкретному объекту
- могут существовать  без создания экземпляра и слова new
- в классе обозначаются static
- используются  для реализации функций, принадлежащих классу, но не к конкретным его объектам
- используются в классах, относящихся к базам данных, для поиска/сохранения/удаления вхождений в базу данных
- используются для создания классов-калькуляторов, классов-утилит, классов-помощников для работы с какими-то другими классами

6. Самостоятельно изучите, что такое геттеры и сеттеры, приведите пример класса с их использованием.
Геттер - метод, который получает значение определённого свойства. 
Сеттер - метод, который присваивает значение определённому свойству объекта. 

 class Car {
            constructor(cost) {
                this.cost = cost
            }
            changeCost(newCost) {
                return this.cost = this.cost + newCost;
            }
            getCost() {
                return this.cost
            }

            get newCost() {
                return this.cost
            }
            set newCost(cost) {
                return this.cost = this.cost + cost;
            }
        }

        const car = new Car(500);

7.
код выведет: object
Person - это класс, по его структуре создался объект - константа member со свойством name = John.

8.  
код выведет: свойства объекта, т к person - это созданный объект.
Для добавления свойства city нужно было обратиться к person.city напрвмую(person.city = "Amsterdam")

